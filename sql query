-- Case Study Questions: 
-- 1.	What is the total amount each customer spent at the restaurant?
   
select customer_id, sum(price)
from menu
inner join sales
on menu.product_id= sales.product_id
group by customer_id;


-- 2.	How many days has each customer visited the restaurant?

select* , count(distinct(order_date)) as days_visited from sales
group by customer_id;


-- 3.	What was the first item from the menu purchased by each customer?

with cte_temp as ( select *, row_number() over (partition by customer_id order by order_date) as first_order
from sales
inner join menu
using (product_id))

select customer_id,
    product_name,
    first_order from cte_temp
    where first_order = 1;
	
-- 4.	What is the most purchased item on the menu and how many times was it purchased by all customers?

select product_name , count(product_name) as items_purchased from sales
inner join menu
on sales.product_id = menu.product_id
group by product_name
ORDER BY
	items_purchased DESC;
    
-- 5.	Which item was the most popular for each customer?

select product_name, customer_id, count(product_id) as popular_dish ,
dense_rank() over(partition by customer_id order by count(product_id) desc) as a from sales 
inner join menu
using (product_id)
group by customer_id, product_name) -- can use reference also like group by 1,2

SELECT customer_id, product_name
FROM cte_table
WHERE a = 1; -- filter the data, where rank is 1

-- 6.	Which item was purchased first by the customer after they became a member?

WITH new_table AS
(SELECT
	*, DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date) AS rnk
FROM sales
INNER JOIN menu USING(product_id)
INNER JOIN members USING(customer_id)
WHERE
	order_Date >= join_date)
SELECT
	*FROM
	new_table
WHERE
	rnk = 1;
 
-- 7.	Which item was purchased just before the customer became a member?

WITH new_table AS
(SELECT
	*, DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date) AS rnk
FROM sales
INNER JOIN menu USING(product_id)
INNER JOIN members USING(customer_id)
WHERE
	order_Date < join_date)
SELECT
	*FROM
	new_table
WHERE
	rnk = 1;
 
-- 8.	What is the total items and amount spent for each member before they became a member?

select customer_id, product_name
,  count(product_id) as total_items ,sum(price) as total_price from sales 
inner join menu
using (product_id)
inner join members
using (customer_id)
where order_date < join_date
group by customer_id;

-- 9.	If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id , sum(points)as points from  (
select * , 
case 
when product_name ="sushi" then price*20
else price*10
end as points
 from sales
inner join menu
using(product_id)) as t
group by customer_id;

-- 10.	In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi
- how many points do customer A and B have at the end of January?

with cte_dates as (
	select*,
date_add(join_date, interval 6 day) as valid_date, -- creating range
last_day("2021-01-31") as last_date-- end of jan 
from members)
select customer_id, sum(
case when product_name = "sushi" then price*20 -- sushi*20
 when order_date between join_date and valid_date-- in 1st wk
 then price*20
 else price*10
 end) as points
 from cte_dates
inner join sales
using(customer_id)
inner join menu using(product_id)
where order_date< last_date
group by customer_id;  
















